{"version":3,"file":"static/webpack/static/development/pages/index.js.436713353e018a39439b.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport hash from \"object-hash\";\nimport { articles, Article as ArticleType } from \"../data/articles\";\nimport { NavBar, Article, Footer } from \"../components\";\n\nexport function findWord(word, str) {\n  return str.split(\" \").some(function(w) {\n    return w.startsWith(word);\n  });\n}\n\nexport default () => {\n  const [value, setValue] = useState(\"\");\n  const articleFilter = ({ headline, author, topics, body }) =>\n    (topics && topics.some(topic => topic.toLowerCase().startsWith(value))) ||\n    (author && findWord(value, author.toLowerCase())) ||\n    (headline && findWord(value, headline.toLowerCase())) ||\n    (body && findWord(value, body.toLowerCase()));\n  return (\n    <Centered>\n      <Head>\n        <style jsx global>{`\n          body {\n            background-color: hsl(246, 55%, 47%);\n            /* font-family: Arial, Helvetica, sans-serif; */\n            font-family: \"Times New Roman\", Times, serif;\n            font-family: \"IBM Plex Sans\", sans-serif;\n            /* font-family: 'Open Sans', sans-serif; */\n            color: white;\n            appearance: none;\n          }\n\n          h1,\n          h2,\n          h3,\n          h4,\n          h5,\n          strong,\n          b {\n            font-weight: 400;\n          }\n\n          h2 {\n            font-size: 20px;\n            color: rgba(255, 255, 255, 1);\n          }\n\n          a {\n            text-decoration: none;\n          }\n        `}</style>\n        <title>WebAssembly</title>\n      </Head>\n      <NavBar onChange={value => setValue(value.toLowerCase())} value={value} />\n      <Articles articles={articles.filter(articleFilter)} />\n    </Centered>\n  );\n};\n\nexport const Centered = styled.div``;\n\nexport const Articles = ({ articles }: { articles: ArticleType[] }) => (\n  <ContentArea>\n    <ArticleColumns>\n      {articles.map(article => (\n        <Article key={hash(article)} data={article} />\n      ))}\n    </ArticleColumns>\n    <Footer />\n  </ContentArea>\n);\n\nexport const ArticleColumns = styled.div`\n  display: grid;\n  width: 100%;\n  grid-gap: 10px;\n  grid-row-gap: 30px;\n  grid-column-gap: 50px;\n  grid-template-columns: repeat(auto-fit, minmax(325px, 1fr));\n`;\n\nexport const ContentArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 92%;\n  padding-left: 4%;\n  padding-right: 4%;\n  @keyframes enter {\n    0% {\n      opacity: 0;\n      transform: translate3d(0, 100px, 0);\n    }\n    50% {\n      opacity: 0;\n      transform: translate3d(0, 100px, 0);\n    }\n    100% {\n      opacity: 1;\n      transform: translate3d(0, 0, 0);\n    }\n  }\n\n  animation: enter 0.5s;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAWA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}
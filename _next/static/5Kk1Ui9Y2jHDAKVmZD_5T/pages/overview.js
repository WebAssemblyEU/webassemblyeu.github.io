(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"+IaD":function(e,a,n){"use strict";n.r(a),n.d(a,"ArticleColumns",function(){return m});var i=n("q1tI"),t=n.n(i),o=n("m/Pd"),s=n.n(o),r=n("vOnD"),d=n("bgFo"),l=t.a.createElement;a.default=function(){var e=Object(i.useState)(""),a=e[0],n=e[1];return console.log(a),l(b,null,l(s.a,null,l("title",null,"WebAssembly")),l(d.c,{onChange:function(e){return n(e.toLowerCase())},experimental:!0}),l(u,null))};var b=r.b.div.withConfig({displayName:"overview__Centered",componentId:"sc-1jz0n34-0"})([""]),m=r.b.div.withConfig({displayName:"overview__ArticleColumns",componentId:"sc-1jz0n34-1"})(["display:grid;width:100%;grid-gap:10px;grid-column-gap:50px;grid-template-columns:repeat(auto-fit,minmax(300px,1fr));"]),c=r.b.div.withConfig({displayName:"overview__ContentArea",componentId:"sc-1jz0n34-2"})(["display:flex;flex-direction:column;align-items:center;width:90%;padding-left:5%;padding-right:5%;"]),u=function(){return l(c,null,l(m,null,l(d.a,{data:{headline:"Virtual Machine Language",body:"WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for compilation of high-level languages like C/C++/Rust, enabling deployment on the web for client and server applications."}}),l(d.a,{data:{headline:"Open Web Standard",body:"Developer reference documentation for Wasm can be found on MDN's WebAssembly pages. The open standards for WebAssembly are developed in a W3C Community Group (that includes representatives from all major browsers) as well as a W3C Working Group."}}),l(d.a,{data:{headline:"Runs fast & predictable",body:"The Wasm stack machine is designed to be encoded in a size- and load-time-efficient binary format. WebAssembly aims to execute at native speed by taking advantage of common hardware capabilities available on a wide range of platforms."}}),l(d.a,{data:{headline:"Secure Module Sandbox",body:"WebAssembly describes a memory-safe, sandboxed execution environment that may even be implemented inside existing JavaScript virtual machines. When embedded in the web, WebAssembly will enforce the same-origin and permissions security policies of the browser."}}),l(d.a,{data:{headline:"Human readable Binary Format",body:"WebAssembly is designed to be pretty-printed in a textual format for debugging, testing, experimenting, optimizing, learning, teaching, and writing programs by hand. The textual format will be used when viewing the source of Wasm modules on the web."}}),l(d.a,{data:{headline:"Part of the Open Web Platform",body:"WebAssembly is designed to maintain the versionless, feature-tested, and backwards-compatible nature of the web. WebAssembly modules will be able to call into and out of the JavaScript context and access browser functionality through the same Web APIs accessible from JavaScript. WebAssembly also supports non-web embeddings."}})))}},VCjF:function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/overview",function(){var e=n("+IaD");return{page:e.default||e}}])}},[["VCjF",1,0]]]);